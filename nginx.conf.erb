daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] %>;
pid /app/nginx.pid;
error_log stderr;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    <% if ENV['NGINX_GZIP_ENABLED'] == '1' %>
    gzip on;
    gzip_disable msie6;
    gzip_min_length 512;
    gzip_proxied <%= ENV['NGINX_GZIP_PROXIED'] %>;
    gzip_types <%= ENV['NGINX_GZIP_TYPES'] %>;
    <% end %>

    log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
    access_log error l2met;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;

    # Increase default upload size from 1M to allow uploading larger images.
    client_max_body_size 10M;

    # Require basic authentication
    #auth_basic "Danger Zone!";
    #auth_basic_user_file /app/config/htpasswd;

    # Only allow specific IP addresses
    map $http_x_forwarded_for $allowed {
        #default deny;
	default allow;
    	~\s*87.94.14.20$ allow;	
    }
 
    upstream app_server {
        server <%= ENV['NGINX_SOCKET'] %> fail_timeout=0;
    }

    server {
       listen <%= ENV['NGINX_LISTEN'] %>;
       server_name _;
       keepalive_timeout 5;
       
       root /app/static;

       location / {
       		if ( $allowed = "deny" ) { return 403; }
                try_files $uri $uri/ =404;
       }

       location /api/ {
       		if ( $allowed = "deny" ) { return 403; }
       		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host $http_host;
		proxy_redirect off;
		proxy_pass http://app_server;
       }
    }
}